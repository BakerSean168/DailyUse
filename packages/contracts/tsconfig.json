{
  // 继承基础配置
  "extends": "../../tsconfig.base.json",

  "compilerOptions": {
    // ============================================================
    // 路径和输出配置
    // ============================================================

    // 基础路径：相对路径的起点
    "baseUrl": ".",

    // 输出目录：编译后的 JavaScript 和类型声明文件
    "outDir": "./dist",

    // 源码根目录：限制编译范围
    "rootDir": "./src",

    // 生成输出文件（库必须生成声明文件）
    "noEmit": false,

    // ============================================================
    // Composite 项目配置（Monorepo 库的核心）
    // ============================================================

    // 启用 composite（支持跨包类型热更新）
    // 注意：composite 不影响 tsup 打包，只用于 tsc 类型检查
    "composite": true,

    // 启用增量编译（提升性能）
    "incremental": true,

    // 生成类型声明文件（.d.ts）
    // 必须启用，否则其他项目无法获取类型信息
    "declaration": true,

    // 生成声明文件的 source map（.d.ts.map）
    // 作用：IDE "跳转到定义" 时可以直接跳转到 TypeScript 源码
    "declarationMap": true,

    // ============================================================
    // 库环境配置（Contracts 包）
    // ============================================================

    // 标准库：仅包含 ES2020（纯类型定义包，不依赖特定环境）
    "lib": ["ES2020"],

    // ============================================================
    // 本地路径别名配置
    // ============================================================

    // 路径别名：仅用于包内部的相对导入
    "paths": {
      // 包内部别名：@/ 指向 src 目录
      "@/*": ["./src/*"]

      // 注意：contracts 是基础包，不依赖其他包
      // 所以不需要配置其他 @dailyuse/* 路径
    }
  },

  // ============================================================
  // 包含和排除配置
  // ============================================================

  // 包含的文件：所有 src 目录下的 TypeScript 文件
  "include": ["src"],

  // 排除的文件
  "exclude": ["node_modules", "dist", "**/*.test.ts", "**/*.spec.ts", "**/*.example.ts"]
}
