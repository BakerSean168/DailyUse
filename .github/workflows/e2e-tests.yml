name: E2E Tests

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: dailyuse_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: dailyuse_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.20.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://dailyuse_test:test_password@localhost:5432/dailyuse_test
        run: |
          # Generate Prisma Client
          pnpm nx run api:prisma:generate
          
          # Run migrations
          pnpm nx run api:prisma:migrate:deploy
          
          # Seed E2E test data
          cd apps/api
          pnpm tsx prisma/seed-e2e.ts
          cd ../..

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Build applications
        run: |
          # Build API
          pnpm nx build api
          
          # Build Web
          pnpm nx build web

      - name: Start API server
        env:
          DATABASE_URL: postgresql://dailyuse_test:test_password@localhost:5432/dailyuse_test
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-e2e
          PORT: 3000
        run: |
          pnpm nx serve api &
          
          # Wait for API to be ready
          echo "Waiting for API server..."
          for i in {1..30}; do
            if curl -s http://localhost:3000/api/health > /dev/null; then
              echo "API server is ready!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done

      - name: Start Web server
        env:
          VITE_API_URL: http://localhost:3000
        run: |
          pnpm nx serve web &
          
          # Wait for Web to be ready
          echo "Waiting for Web server..."
          for i in {1..30}; do
            if curl -s http://localhost:5173 > /dev/null; then
              echo "Web server is ready!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done

      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://dailyuse_test:test_password@localhost:5432/dailyuse_test
          CI: true
        run: pnpm nx e2e web

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: apps/web/test-results/
          retention-days: 30

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: apps/web/test-results/**/*.png
          retention-days: 30

      - name: Upload videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: apps/web/test-results/**/*.webm
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: daun/playwright-report-comment@v3
        with:
          report-path: apps/web/playwright-report
