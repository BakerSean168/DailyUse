{
  "graph": {
    "nodes": {
      "domain-client": {
        "name": "domain-client",
        "type": "lib",
        "data": {
          "root": "packages/domain-client",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["packages/domain-client/**/*.{ts,js}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "pnpm exec vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                },
                "scriptContent": "vitest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["default", "^production", "{workspaceRoot}/jest.preset.js"],
              "cache": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "options": {
                "cwd": "packages/domain-client",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript"],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects domain-client --includeDependentProjects -- pnpm exec nx build-deps domain-client"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:run"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "vitest watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ui"
              },
              "metadata": {
                "scriptContent": "vitest --ui",
                "runCommand": "pnpm run test:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/packages/domain-client/dist"],
              "options": {
                "command": "pnpm build",
                "cwd": "packages/domain-client"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "packages/domain-client"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            }
          },
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["test", "test:run", "test:coverage", "test:watch", "test:ui"]
            },
            "description": "Client-side domain models with UI-focused methods",
            "js": {
              "packageName": "@dailyuse/domain-client",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "require": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "domain-client",
          "tags": ["npm:public", "scope:shared", "type:lib"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/domain-client/src",
          "implicitDependencies": ["contracts", "domain-core"]
        }
      },
      "domain-server": {
        "name": "domain-server",
        "type": "lib",
        "data": {
          "root": "packages/domain-server",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["packages/domain-server/**/*.{ts,js}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "pnpm exec vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                },
                "scriptContent": "vitest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["default", "^production", "{workspaceRoot}/jest.preset.js"],
              "cache": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "options": {
                "cwd": "packages/domain-server",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript"],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects domain-server --includeDependentProjects -- pnpm exec nx build-deps domain-server"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:run"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "vitest watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ui"
              },
              "metadata": {
                "scriptContent": "vitest --ui",
                "runCommand": "pnpm run test:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/packages/domain-server/dist"],
              "options": {
                "command": "pnpm build",
                "cwd": "packages/domain-server"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "packages/domain-server"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            }
          },
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["test", "test:run", "test:coverage", "test:watch", "test:ui"]
            },
            "description": "Server-side domain models with business logic",
            "js": {
              "packageName": "@dailyuse/domain-server",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "domain-server",
          "tags": ["npm:public", "scope:shared", "type:lib"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/domain-server/src",
          "implicitDependencies": ["contracts", "domain-core"]
        }
      },
      "domain-core": {
        "name": "domain-core",
        "type": "lib",
        "data": {
          "root": "packages/domain-core",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["packages/domain-core/**/*.{ts,js}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/packages/domain-core/dist"],
              "options": {
                "command": "pnpm build",
                "cwd": "packages/domain-core"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "packages/domain-core"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            }
          },
          "name": "domain-core",
          "tags": ["npm:public", "scope:shared", "type:lib"],
          "metadata": {
            "targetGroups": {},
            "description": "Core domain models shared between frontend and backend",
            "js": {
              "packageName": "@dailyuse/domain-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/domain-core/src",
          "implicitDependencies": ["contracts"]
        }
      },
      "contracts": {
        "name": "contracts",
        "type": "lib",
        "data": {
          "root": "packages/contracts",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["packages/contracts/**/*.{ts,js}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rimraf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/packages/contracts/dist"],
              "options": {
                "command": "pnpm build",
                "cwd": "packages/contracts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "packages/contracts"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            }
          },
          "name": "contracts",
          "tags": ["npm:public", "scope:shared", "type:lib"],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["clean"]
            },
            "js": {
              "packageName": "@dailyuse/contracts",
              "packageExports": {
                ".": {
                  "development": {
                    "types": "./src/index.ts",
                    "import": "./src/index.ts"
                  },
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/contracts/src",
          "implicitDependencies": []
        }
      },
      "assets": {
        "name": "assets",
        "type": "lib",
        "data": {
          "root": "packages/assets",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/assets",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "assets",
          "tags": [
            "npm:public",
            "npm:assets",
            "npm:static-resources",
            "npm:monorepo",
            "scope:shared",
            "type:lib",
            "type:assets"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Shared static assets for DailyUse applications (images, audio, fonts)",
            "js": {
              "packageName": "@dailyuse/assets",
              "packageExports": {
                ".": "./src/index.ts",
                "./images": "./src/images/index.ts",
                "./audio": "./src/audio/index.ts"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/assets/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "utils": {
        "name": "utils",
        "type": "lib",
        "data": {
          "root": "packages/utils",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["packages/utils/**/*.{ts,js}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rimraf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/packages/utils/dist"],
              "options": {
                "command": "pnpm build",
                "cwd": "packages/utils"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "packages/utils"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            }
          },
          "name": "utils",
          "tags": ["npm:public", "scope:shared", "type:lib"],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["clean"]
            },
            "js": {
              "packageName": "@dailyuse/utils",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/utils/src",
          "implicitDependencies": []
        }
      },
      "desktop": {
        "name": "desktop",
        "type": "app",
        "data": {
          "root": "apps/desktop",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["apps/desktop/**/*.{ts,tsx,js,jsx,vue}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "../../coverage/apps/desktop"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["default", "^production", "{workspaceRoot}/jest.preset.js"],
              "cache": true
            },
            "vite:build": {
              "options": {
                "cwd": "apps/desktop",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^vite:build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{projectRoot}\\dist"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/vite:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "desktop:build"
              },
              "configurations": {
                "development": {
                  "buildTarget": "desktop:build:development",
                  "hmr": true
                },
                "production": {
                  "buildTarget": "desktop:build:production",
                  "devServerTarget": "desktop:serve:development"
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "vite:dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/desktop",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "vite:preview": {
              "continuous": true,
              "dependsOn": ["vite:build"],
              "options": {
                "cwd": "apps/desktop",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "vite:build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vue-tsc", "typescript"]
                }
              ],
              "options": {
                "cwd": "apps/desktop",
                "command": "vue-tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript", "vue"],
                "help": {
                  "command": "pnpm exec vue-tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects desktop --includeDependentProjects -- pnpm exec nx build-deps desktop"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "nx serve",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "nx vite:preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ui"
              },
              "metadata": {
                "scriptContent": "nx test --ui",
                "runCommand": "pnpm run test:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "graph": {
              "executor": "nx:run-script",
              "options": {
                "script": "graph"
              },
              "metadata": {
                "scriptContent": "nx graph",
                "runCommand": "pnpm run graph"
              },
              "configurations": {},
              "parallelism": true
            },
            "affected:build": {
              "executor": "nx:run-script",
              "options": {
                "script": "affected:build"
              },
              "metadata": {
                "scriptContent": "nx affected --target=build",
                "runCommand": "pnpm run affected:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "affected:test": {
              "executor": "nx:run-script",
              "options": {
                "script": "affected:test"
              },
              "metadata": {
                "scriptContent": "nx affected --target=test",
                "runCommand": "pnpm run affected:test"
              },
              "configurations": {},
              "parallelism": true
            },
            "affected:lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "affected:lint"
              },
              "metadata": {
                "scriptContent": "nx affected --target=lint",
                "runCommand": "pnpm run affected:lint"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/apps/desktop/dist"],
              "defaultConfiguration": "production",
              "options": {
                "command": "pnpm build",
                "cwd": "apps/desktop"
              },
              "configurations": {
                "development": {
                  "mode": "development"
                },
                "production": {
                  "mode": "production"
                }
              },
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "package": {
              "executor": "nx:run-commands",
              "options": {
                "command": "electron-builder --dir",
                "cwd": "apps/desktop"
              },
              "configurations": {},
              "parallelism": true
            },
            "dist": {
              "executor": "nx:run-commands",
              "options": {
                "command": "electron-builder",
                "cwd": "apps/desktop"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview",
                "test:ui",
                "graph",
                "affected:build",
                "affected:test",
                "affected:lint"
              ]
            },
            "description": "DailyUse",
            "js": {
              "packageName": "@dailyuse/desktop",
              "packageMain": "dist-electron/main.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "desktop",
          "tags": ["npm:public", "scope:desktop", "type:app", "platform:electron"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/desktop/src",
          "implicitDependencies": []
        }
      },
      "ui": {
        "name": "ui",
        "type": "lib",
        "data": {
          "root": "packages/ui",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["packages/ui/**/*.{ts,js,vue}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "vite:build": {
              "options": {
                "cwd": "packages/ui",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^vite:build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{projectRoot}\\dist"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "packages/ui",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "vite:dev": {
              "continuous": true,
              "options": {
                "cwd": "packages/ui",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "vite:preview": {
              "continuous": true,
              "dependsOn": ["vite:build"],
              "options": {
                "cwd": "packages/ui",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "vite:build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vue-tsc", "typescript"]
                }
              ],
              "options": {
                "cwd": "packages/ui",
                "command": "vue-tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript", "vue"],
                "help": {
                  "command": "pnpm exec vue-tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects ui --includeDependentProjects -- pnpm exec nx build-deps ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rimraf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "type-check": {
              "executor": "nx:run-script",
              "options": {
                "script": "type-check"
              },
              "metadata": {
                "scriptContent": "vue-tsc --noEmit",
                "runCommand": "pnpm run type-check"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/packages/ui/dist"],
              "options": {
                "command": "pnpm build",
                "cwd": "packages/ui"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "packages/ui"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            }
          },
          "projectType": "library",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["clean", "type-check"]
            },
            "description": "Reusable Vue 3 + Vuetify UI components for DailyUse applications",
            "js": {
              "packageName": "@dailyuse/ui",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                },
                "./style": "./dist/style.css"
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "ui",
          "tags": ["npm:public", "scope:shared", "type:lib"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ui/src",
          "implicitDependencies": ["contracts"]
        }
      },
      "api": {
        "name": "api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["apps/api/**/*.{ts,js}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm test",
                "cwd": "apps/api"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["default", "^production", "{workspaceRoot}/jest.preset.js"],
              "cache": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "options": {
                "cwd": "apps/api",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript"],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects api --includeDependentProjects -- pnpm exec nx build-deps api"
              },
              "configurations": {},
              "parallelism": true
            },
            "docs:export": {
              "executor": "nx:run-script",
              "options": {
                "script": "docs:export"
              },
              "metadata": {
                "scriptContent": "node src/scripts/export-api-docs.js",
                "runCommand": "pnpm run docs:export"
              },
              "configurations": {},
              "parallelism": true
            },
            "docs:serve": {
              "executor": "nx:run-script",
              "options": {
                "script": "docs:serve"
              },
              "metadata": {
                "scriptContent": "echo 'API 文档访问地址: http://localhost:3888/api-docs'",
                "runCommand": "pnpm run docs:serve"
              },
              "configurations": {},
              "parallelism": true
            },
            "prisma:generate": {
              "executor": "nx:run-script",
              "options": {
                "script": "prisma:generate"
              },
              "metadata": {
                "scriptContent": "prisma generate",
                "runCommand": "pnpm run prisma:generate"
              },
              "configurations": {},
              "parallelism": true
            },
            "prisma:migrate": {
              "executor": "nx:run-script",
              "options": {
                "script": "prisma:migrate"
              },
              "metadata": {
                "scriptContent": "prisma migrate dev --name init",
                "runCommand": "pnpm run prisma:migrate"
              },
              "configurations": {},
              "parallelism": true
            },
            "prisma:studio": {
              "executor": "nx:run-script",
              "options": {
                "script": "prisma:studio"
              },
              "metadata": {
                "scriptContent": "prisma studio",
                "runCommand": "pnpm run prisma:studio"
              },
              "configurations": {},
              "parallelism": true
            },
            "prisma:seed": {
              "executor": "nx:run-script",
              "options": {
                "script": "prisma:seed"
              },
              "metadata": {
                "scriptContent": "tsx prisma/seed.ts",
                "runCommand": "pnpm run prisma:seed"
              },
              "configurations": {},
              "parallelism": true
            },
            "db:seed": {
              "executor": "nx:run-script",
              "options": {
                "script": "db:seed"
              },
              "metadata": {
                "scriptContent": "npm run prisma:seed",
                "runCommand": "pnpm run db:seed"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:run"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "vitest watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ui"
              },
              "metadata": {
                "scriptContent": "vitest --ui",
                "runCommand": "pnpm run test:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "apps/api"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "apps/api"
              },
              "configurations": {},
              "parallelism": true,
              "cache": false
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/dist/apps/api"],
              "options": {
                "command": "pnpm build",
                "cwd": "apps/api"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "start": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm start",
                "cwd": "apps/api"
              },
              "dependsOn": ["build"],
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "docs:export",
                "docs:serve",
                "prisma:generate",
                "prisma:migrate",
                "prisma:studio",
                "prisma:seed",
                "db:seed",
                "test:run",
                "test:coverage",
                "test:watch",
                "test:ui"
              ]
            },
            "js": {
              "packageName": "@dailyuse/api",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "api",
          "tags": ["npm:private", "scope:api", "type:app"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/api/src",
          "implicitDependencies": []
        }
      },
      "web": {
        "name": "web",
        "type": "app",
        "data": {
          "root": "apps/web",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": ["{options.outputFile}"],
              "options": {
                "lintFilePatterns": ["apps/web/**/*.{ts,tsx,js,jsx,vue}"]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/eslint.config.js"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "../../coverage/apps/web"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["default", "^production", "{workspaceRoot}/jest.preset.js"],
              "cache": true
            },
            "vite:build": {
              "options": {
                "cwd": "apps/web",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^vite:build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{projectRoot}\\dist"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/web",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "vite:dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/web",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "vite:preview": {
              "continuous": true,
              "dependsOn": ["vite:build"],
              "options": {
                "cwd": "apps/web",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "vite:build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vue-tsc", "typescript"]
                }
              ],
              "options": {
                "cwd": "apps/web",
                "command": "vue-tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript", "vue"],
                "help": {
                  "command": "pnpm exec vue-tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects web --includeDependentProjects -- pnpm exec nx build-deps web"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "vitest watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "nx:run-script",
              "options": {
                "script": "e2e"
              },
              "metadata": {
                "scriptContent": "playwright test",
                "runCommand": "pnpm run e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e:headed": {
              "executor": "nx:run-script",
              "options": {
                "script": "e2e:headed"
              },
              "metadata": {
                "scriptContent": "playwright test --headed",
                "runCommand": "pnpm run e2e:headed"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e:debug": {
              "executor": "nx:run-script",
              "options": {
                "script": "e2e:debug"
              },
              "metadata": {
                "scriptContent": "playwright test --debug",
                "runCommand": "pnpm run e2e:debug"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "e2e:ui"
              },
              "metadata": {
                "scriptContent": "playwright test --ui",
                "runCommand": "pnpm run e2e:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e:report": {
              "executor": "nx:run-script",
              "options": {
                "script": "e2e:report"
              },
              "metadata": {
                "scriptContent": "playwright show-report",
                "runCommand": "pnpm run e2e:report"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "@nx/vite:dev-server",
              "options": {
                "buildTarget": "web:build"
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true,
              "cache": false
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/dist/apps/web"],
              "options": {
                "command": "pnpm build",
                "cwd": "apps/web"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "preview": {
              "executor": "@nx/vite:preview-server",
              "options": {
                "buildTarget": "web:build"
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            }
          },
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test:watch",
                "e2e",
                "e2e:headed",
                "e2e:debug",
                "e2e:ui",
                "e2e:report"
              ]
            },
            "js": {
              "packageName": "@dailyuse/web",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "web",
          "tags": ["npm:private", "scope:web", "type:app"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/web/src",
          "implicitDependencies": []
        }
      },
      "daily-use": {
        "name": "daily-use",
        "type": "app",
        "data": {
          "root": ".",
          "metadata": {},
          "targets": {
            "test": {
              "options": {
                "cwd": ".",
                "command": "vitest"
              },
              "cache": true,
              "inputs": ["default", "^production", "{workspaceRoot}/jest.preset.js"],
              "outputs": ["{projectRoot}\\coverage"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "pnpm exec vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "options": {
                "cwd": ".",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": ["typescript"],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects daily-use --includeDependentProjects -- pnpm exec nx build-deps daily-use"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "daily-use",
          "implicitDependencies": [],
          "tags": []
        }
      }
    },
    "dependencies": {
      "domain-client": [
        {
          "source": "domain-client",
          "target": "contracts",
          "type": "implicit"
        },
        {
          "source": "domain-client",
          "target": "domain-core",
          "type": "implicit"
        },
        {
          "source": "domain-client",
          "target": "domain-core",
          "type": "static"
        },
        {
          "source": "domain-client",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "domain-client",
          "target": "contracts",
          "type": "static"
        }
      ],
      "domain-server": [
        {
          "source": "domain-server",
          "target": "contracts",
          "type": "implicit"
        },
        {
          "source": "domain-server",
          "target": "domain-core",
          "type": "implicit"
        },
        {
          "source": "domain-server",
          "target": "domain-core",
          "type": "static"
        },
        {
          "source": "domain-server",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "domain-server",
          "target": "contracts",
          "type": "static"
        }
      ],
      "domain-core": [
        {
          "source": "domain-core",
          "target": "contracts",
          "type": "implicit"
        },
        {
          "source": "domain-core",
          "target": "contracts",
          "type": "static"
        },
        {
          "source": "domain-core",
          "target": "utils",
          "type": "static"
        }
      ],
      "contracts": [],
      "assets": [],
      "utils": [
        {
          "source": "utils",
          "target": "contracts",
          "type": "static"
        }
      ],
      "desktop": [
        {
          "source": "desktop",
          "target": "contracts",
          "type": "static"
        },
        {
          "source": "desktop",
          "target": "domain-client",
          "type": "static"
        },
        {
          "source": "desktop",
          "target": "domain-core",
          "type": "static"
        },
        {
          "source": "desktop",
          "target": "domain-server",
          "type": "static"
        },
        {
          "source": "desktop",
          "target": "ui",
          "type": "static"
        },
        {
          "source": "desktop",
          "target": "utils",
          "type": "static"
        }
      ],
      "ui": [
        {
          "source": "ui",
          "target": "contracts",
          "type": "implicit"
        },
        {
          "source": "ui",
          "target": "utils",
          "type": "static"
        }
      ],
      "api": [
        {
          "source": "api",
          "target": "contracts",
          "type": "static"
        },
        {
          "source": "api",
          "target": "contracts",
          "type": "dynamic"
        },
        {
          "source": "api",
          "target": "domain-server",
          "type": "static"
        },
        {
          "source": "api",
          "target": "domain-server",
          "type": "dynamic"
        },
        {
          "source": "api",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "api",
          "target": "utils",
          "type": "dynamic"
        },
        {
          "source": "api",
          "target": "domain-core",
          "type": "static"
        }
      ],
      "web": [
        {
          "source": "web",
          "target": "contracts",
          "type": "static"
        },
        {
          "source": "web",
          "target": "domain-client",
          "type": "static"
        },
        {
          "source": "web",
          "target": "ui",
          "type": "static"
        },
        {
          "source": "web",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "web",
          "target": "assets",
          "type": "static"
        },
        {
          "source": "web",
          "target": "domain-core",
          "type": "dynamic"
        },
        {
          "source": "web",
          "target": "api",
          "type": "static"
        }
      ],
      "daily-use": [
        {
          "source": "daily-use",
          "target": "contracts",
          "type": "static"
        },
        {
          "source": "daily-use",
          "target": "domain-client",
          "type": "static"
        },
        {
          "source": "daily-use",
          "target": "domain-core",
          "type": "static"
        },
        {
          "source": "daily-use",
          "target": "domain-server",
          "type": "static"
        },
        {
          "source": "daily-use",
          "target": "ui",
          "type": "static"
        },
        {
          "source": "daily-use",
          "target": "utils",
          "type": "static"
        }
      ]
    }
  }
}
