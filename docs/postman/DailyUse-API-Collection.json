{
  "info": {
    "name": "DailyUse API",
    "description": "账户管理和认证模块的 API 测试集合",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api/v1"
    },
    {
      "key": "auth_token",
      "value": ""
    },
    {
      "key": "account_id",
      "value": ""
    },
    {
      "key": "session_id",
      "value": ""
    },
    {
      "key": "refresh_token",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "账户管理",
      "item": [
        {
          "name": "1. 创建账户",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser001\",\n  \"email\": \"testuser001@example.com\",\n  \"phoneNumber\": \"+86 13800138000\",\n  \"accountType\": \"LOCAL\",\n  \"firstName\": \"张\",\n  \"lastName\": \"三\",\n  \"displayName\": \"张三\",\n  \"bio\": \"这是一个测试账户\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts",
              "host": ["{{base_url}}"],
              "path": ["accounts"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has success field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Account ID is present\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.uuid).to.exist;",
                  "    pm.environment.set(\"account_id\", jsonData.data.uuid);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. 根据ID获取账户",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Account data is present\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.uuid).to.exist;",
                  "    pm.expect(jsonData.data.username).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3. 根据用户名获取账户",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/username/testuser001",
              "host": ["{{base_url}}"],
              "path": ["accounts", "username", "testuser001"]
            }
          }
        },
        {
          "name": "4. 更新账户信息",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"李\",\n  \"lastName\": \"四\",\n  \"displayName\": \"李四\",\n  \"bio\": \"更新后的个人简介\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}"]
            }
          }
        },
        {
          "name": "5. 激活账户",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}/activate",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}", "activate"]
            }
          }
        },
        {
          "name": "6. 验证邮箱",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"email_verification_token_here\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}/verify-email",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}", "verify-email"]
            }
          }
        },
        {
          "name": "7. 验证手机号",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}/verify-phone",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}", "verify-phone"]
            }
          }
        },
        {
          "name": "8. 获取所有账户",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["accounts"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "9. 搜索账户",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/search?query=testuser",
              "host": ["{{base_url}}"],
              "path": ["accounts", "search"],
              "query": [
                {
                  "key": "query",
                  "value": "testuser"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "认证管理",
      "item": [
        {
          "name": "1. 用户登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser001\",\n  \"password\": \"SecurePassword123!\",\n  \"deviceInfo\": \"Postman Test Client\",\n  \"ipAddress\": \"192.168.1.100\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    ",
                  "    // 保存令牌和会话ID",
                  "    if (jsonData.data && jsonData.data.accessToken) {",
                  "        pm.environment.set(\"auth_token\", jsonData.data.accessToken);",
                  "    }",
                  "    if (jsonData.data && jsonData.data.refreshToken) {",
                  "        pm.environment.set(\"refresh_token\", jsonData.data.refreshToken);",
                  "    }",
                  "    if (jsonData.data && jsonData.data.sessionId) {",
                  "        pm.environment.set(\"session_id\", jsonData.data.sessionId);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. MFA验证",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deviceUuid\": \"mfa_device_uuid\",\n  \"code\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/mfa/verify",
              "host": ["{{base_url}}"],
              "path": ["auth", "mfa", "verify"]
            }
          }
        },
        {
          "name": "3. 刷新令牌",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Token refresh successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.accessToken) {",
                  "        pm.environment.set(\"auth_token\", jsonData.data.accessToken);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "4. 登出",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Logout successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    // 清除令牌",
                  "    pm.environment.unset(\"auth_token\");",
                  "    pm.environment.unset(\"refresh_token\");",
                  "    pm.environment.unset(\"session_id\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "5. 创建MFA设备",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accountUuid\": \"{{account_id}}\",\n  \"type\": \"TOTP\",\n  \"name\": \"My Authenticator App\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/mfa/devices",
              "host": ["{{base_url}}"],
              "path": ["auth", "mfa", "devices"]
            }
          }
        },
        {
          "name": "6. 获取MFA设备列表",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/mfa/devices/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["auth", "mfa", "devices", "{{account_id}}"]
            }
          }
        },
        {
          "name": "7. 获取会话列表",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/sessions/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["auth", "sessions", "{{account_id}}"]
            }
          }
        },
        {
          "name": "8. 终止会话",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/sessions/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["auth", "sessions", "{{session_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "健康检查",
      "item": [
        {
          "name": "API健康检查",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Health check successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"ok\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// 通用请求前脚本",
          "console.log('Request to: ' + pm.request.url);",
          "",
          "// 如果有认证令牌但请求头中没有，自动添加",
          "const token = pm.environment.get('auth_token');",
          "if (token && !pm.request.headers.has('Authorization')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: 'Bearer ' + token",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "exec": [
          "// 通用响应测试",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// 错误处理",
          "if (pm.response.code >= 400) {",
          "    console.log('Error Response Body:', pm.response.text());",
          "}",
          "",
          "// JSON格式检查（如果不是204状态码）",
          "if (pm.response.code !== 204) {",
          "    pm.test('Response is JSON format', function () {",
          "        pm.response.to.be.json;",
          "    });",
          "}"
        ]
      }
    }
  ]
}
