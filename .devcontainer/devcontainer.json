{
  "name": "DailyUse Development Environment",
  "image": "mcr.microsoft.com/devcontainers/typescript-node:1-22-bookworm",
  
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "version": "22.20.0",
      "nodeGypDependencies": true,
      "nvmVersion": "latest"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "dockerDashComposeVersion": "v2"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest",
      "ppa": true
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        "github.copilot",
        "github.copilot-chat",
        "automatalabs.copilot-mcp",
        "nrwl.angular-console",
        "vue.volar",
        "esbenp.prettier-vscode",
        "ms-ceintl.vscode-language-pack-zh-hans",
        "github.vscode-github-actions",
        "github.vscode-pull-request-github"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash"
          }
        },
        "files.eol": "\n",
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[vue]": {
          "editor.defaultFormatter": "vue.volar"
        }
      }
    }
  },

  "forwardPorts": [
    3000,
    3001,
    5173,
    5432
  ],

  "portsAttributes": {
    "3000": {
      "label": "API Server",
      "onAutoForward": "notify"
    },
    "3001": {
      "label": "API Dev",
      "onAutoForward": "notify"
    },
    "5173": {
      "label": "Web Frontend",
      "onAutoForward": "notify"
    },
    "5432": {
      "label": "PostgreSQL",
      "onAutoForward": "silent"
    }
  },

  "postCreateCommand": "bash .devcontainer/post-create.sh",

  "postStartCommand": "git config --global --add safe.directory ${containerWorkspaceFolder}",

  "remoteUser": "node",

  "mounts": [
    "source=${localWorkspaceFolder}/.devcontainer/mcp-config.json,target=/home/node/.config/Code/User/globalStorage/automatalabs.copilot-mcp/config.json,type=bind"
  ]
}
